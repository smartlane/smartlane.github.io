swagger: '2.0'
info:
  title: API Description
  description: This document contains a detailed description of all API endpoints and respective data objects for SmartlaneDISPATCH! company, driver, address delivery management as well as route planning and optimisation, ETA caculation, accounting and user authorization.
  version: "1.0"
host: dispatch.smartlane.io
schemes:
  - https
basePath: /api
produces:
  - application/json
securityDefinitions:
  jwt:
    type: apiKey
    name: jwt
    in: header
security:
  - jwt: []
paths:
  /company:
    get:
      summary: "Returns the object data of the dispatcher's company."
      description: "Get company object information. At the moment, there can be only one company in the database. However, for potential future extensions, the result of this call is a list containing one element: this one company"
      tags:
        - Company
      responses:
        200:
          description: List of company objects
          schema:
            $ref: "#/definitions/Companies"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /companyaddress:
    get:
      summary: "Get company address/location."
      description: "Returns the address/locations of the company central."
      tags:
        - Company
      responses:
        200:
          description: Company address object
          schema:
            $ref: "#/definitions/Address"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dispatcher:
    get:
      summary: "Get user data of all dispatchers."
      description: Gets data of all dispatcher users in the database.
      tags:
        - Company
      parameters:
        - in: query
          name: q
          description: |
            Filter query string. Can be used to filter results. The format is the following:
            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>, 'val': <argument>}],'option':optionvalue} (for comparing with a String or numerical value)

            or

            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>,'field': <fieldname>}],'option':optionvalue} (for comparing with a value from another field).

            Possible operators for operatorname are:

            > ==, eq, equals, equals_to, !=, neq, does_not_equal, not_equal_to, >, gt, <, lt, >=, ge, gte, geq, <=, le, lte, leq, in, not_in, is_null, is_not_null, like, ilike, has, any.

            Possible options for optionvalue are:

            > limit, offset, order_by, group_by, single.

            Possible parameters for order_by are:

            > List of {'field': <fieldname>, 'direction': <directionname>} directionname is asc or desc
          type: string
      responses:
        200:
          description: list of dispatcher user objects
          schema:
            $ref: "#/definitions/Dispatchers"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dispatcher/{dispatcher_id}:
    get:
      summary: "Get user data of one dispatcher."
      description: "Gets data of one dispatcher user with a given id in the database.
        Returns the address(es)/locations of the company centrals and depots."
      tags:
        - Company
      parameters:
        - in: path
          name: dispatcher_id
          description: Dispatcher ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Dispatcher"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /driver:
    get:
      summary: Get all driver information.
      description: |
        Returns a list of all drivers with all the information available.
      tags:
        - Driver
      parameters:
        - in: query
          name: q
          description: |
            Filter query string. Can be used to filter results. The format is the following:
            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>, 'val': <argument>}],'option':optionvalue} (for comparing with a String or numerical value)

            or

            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>,'field': <fieldname>}],'option':optionvalue} (for comparing with a value from another field).

            Possible operators for operatorname are:

            > ==, eq, equals, equals_to, !=, neq, does_not_equal, not_equal_to, >, gt, <, lt, >=, ge, gte, geq, <=, le, lte, leq, in, not_in, is_null, is_not_null, like, ilike, has, any.

            Possible options for optionvalue are:

            > limit, offset, order_by, group_by, single.

            Possible parameters for order_by are:

            > List of {'field': <fieldname>, 'direction': <directionname>} directionname is asc or desc
          type: string
        - in: query
          name: includeavail
          required: false
          type: boolean
          description: |
            "Returns an additional field available (which is not stored in the database) for the referring driver if the query parameter 'includeavail' is set to 'true'. Defaults to false if parameter is not supplied.

            The result for 'available' is true if these two conditions are fullfilled for a driver:

            There is at least one timeframe in the driveravailability table.

            The current time is within one of the driveravailability time frames for this driver"
        - in: query
          name: includeposition
          type: boolean
          description: |
            "Returns an additional field current_position for the driver's current position if the query parameter 'includeposition' is set to 'true'. Defaults to false if parameter is not supplied.
            Both parameters can of course be combined, e.g.: /api/driver?includeavail=true&includeposition=true"
          required: false
        - in: query
          name: driverinfo
          type: boolean
          required: false
          description: |
            "Returns additional driver information (firstname, lastname, htmlcolor) if the query parameter 'driverinfo' is set to 'true'. Defaults to false if parameter is not supplied."
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Drivers"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Adds a driver.
      description: |
        Adds a new driver to the system.
      tags:
        - Driver
      responses:
        201:
          description: Created
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Edit driver
      description: |
        Edits/patches driver information.
      tags:
        - Driver
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /driver/{driver_id}:
    delete:
      summary: Deletes a driver
      description: "Deletes a driver from the system. Any driver connected to the system will not be able to log in anymore with the app or via the API and needs to be re-entered again."
      tags:
        - Driver
      parameters:
        - in: path
          name: driver_id
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Driver"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /driveravailability:
    get:
      summary: Gets all driver availability times
      description: get the availability times of all drivers in the database
      tags:
        - Driver
      parameters:
        - in: query
          name: q
          description: |
            Filter query string. Can be used to filter results. The format is the following:
            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>, 'val': <argument>}],'option':optionvalue} (for comparing with a String or numerical value)

            or

            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>,'field': <fieldname>}],'option':optionvalue} (for comparing with a value from another field).

            Possible operators for operatorname are:

            > ==, eq, equals, equals_to, !=, neq, does_not_equal, not_equal_to, >, gt, <, lt, >=, ge, gte, geq, <=, le, lte, leq, in, not_in, is_null, is_not_null, like, ilike, has, any.

            Possible options for optionvalue are:

            > limit, offset, order_by, group_by, single.

            Possible parameters for order_by are:

            > List of {'field': <fieldname>, 'direction': <directionname>} directionname is asc or desc
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Driveravailabilities"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: "Adds (but does not merge) a new driver availability time window. For merging overlapping time entries, please use POST /mergedriveravailability"
      description: "Adds a new driver availability time window to the database. It does not check if there is already an existing overlapping driver availability in the database. There might be multiple driver availabilities with overlapping time windows in the DB after using this POST call. if this is not desired, please use the endpoint POST /mergedriveravailability (see below)."
      tags:
        - Driver
      parameters:
        - in: body
          name: driveravailability
          required: true
          schema:
            $ref: "#/definitions/Driveravailability"
      responses:
        201:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Edits a driver availability time window
      description: Edits an exisiting driver availability time window
      tags:
        - Driver
      parameters:
        - in: body
          name: driveravailability
          required: true
          schema:
            $ref: "#/definitions/Driveravailability"
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /driveravailability/{driveravailability_id}:
    get:
      summary: Gets one driver availability time window
      description: Gets one driver availability time window identified by the time windows ID
      tags:
        - Driver
      parameters:
        - in: path
          name: driveravailability_id
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Driveravailability"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Deletes a driver availability time window
      description: Deletes an exisiting driver availability time window
      tags:
        - Driver
      parameters:
        - in: path
          name: driveravailability_id
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /mergedriveravailability:
    post:
      summary: "Adds or merges a new driver availability time window after checking if another overlapping availity already exists."
      description: "Adds a new driver availability time window after checking if another overlapping availity already exists. If there is one (at the beginning or the end of this on) ore two (at the beginning and the end of this one) already existing driver availabilities, it will be merged with the existing one(s) into one. If there is no overlapping availability, it will be added as a new one."
      tags:
        - Driver
      parameters:
        - in: body
          name: driveravailability
          required: true
          schema:
            $ref: "#/definitions/Driveravailability"
      responses:
        200:
          description: new availability successfully merged with an existing one
        201:
          description: new availability successfully created
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /drivertracking:
    get:
      summary: Gets all driver tracking data from the database
      description: get all driver tracking data from the database
      tags:
        - Driver
      parameters:
        - in: query
          name: q
          description: |
            Filter query string. Can be used to filter results. The format is the following:
            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>, 'val': <argument>}],'option':optionvalue} (for comparing with a String or numerical value)

            or

            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>,'field': <fieldname>}],'option':optionvalue} (for comparing with a value from another field).

            Possible operators for operatorname are:

            > ==, eq, equals, equals_to, !=, neq, does_not_equal, not_equal_to, >, gt, <, lt, >=, ge, gte, geq, <=, le, lte, leq, in, not_in, is_null, is_not_null, like, ilike, has, any.

            Possible options for optionvalue are:

            > limit, offset, order_by, group_by, single.

            Possible parameters for order_by are:

            > List of {'field': <fieldname>, 'direction': <directionname>} directionname is asc or desc
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Drivertrackings"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Creates a new driver tracking entry
      description: Creates a new driver tracking entry with a timestamp and a position
      tags:
        - Driver
      parameters:
        - in: body
          name: drivertracking
          required: true
          schema:
            $ref: "#/definitions/Drivertracking"
      responses:
        201:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /drivertracking/{drivertracking_id}:
    get:
      summary: Gets one driver tracking entry
      description: Gets one driver tracking entry identified by the tracking entry ID
      tags:
        - Driver
      parameters:
        - in: path
          name: drivertracking_id
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Drivertracking"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Deletes one driver tracking entry
      description: Deletes one driver tracking entry identified by the tracking entry ID
      tags:
        - Driver
      parameters:
        - in: path
          name: drivertracking_id
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /driverposition:
    get:
      summary: Gets all drivers current positions.
      description: |
        Fetches the current position of all drivers.
      tags:
        - Driver
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Driverpositions"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /driverposition/{driver_id}:
    get:
        summary: Gets a driver position.
        description: Gets the current position of one driver.
        tags:
          - Driver
        parameters:
        - in: path
          name: driver_id
          description: Driver ID
          required: true
          type: integer
          format: int32
        responses:
          200:
            description: OK
            schema:
              $ref: "#/definitions/Driverposition"
          403:
            description: A failure message caused by missing authorization (403 forbidden)
            schema:
              type: string
          422:
            description: >-
              A failure message caused by unprocessable input (e.g. no data found
              for input parameters)
            schema:
              type: string
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
  /drivertrace/{driver_id}:
    get:
      summary: Get polyline of an already driven route.
      description: |
        Get a polyline of the already driven part of a route of one driver.
      tags:
        - Driver
      parameters:
        - in: path
          name: driver_id
          description: Driver ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: A GeoJSON Linestring
          schema:
            $ref: "#/definitions/Linestring"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /driverroute/{driver_id}:
    get:
      summary: "Gets the ID of the driver's driven route"
      description: |
        "Get the ID of the route which the driver is actually driving on. A driver could be assigned to multiple routes. This endpoint retunrns only one route which the driver is actually already driving (route status is "onthe way")"
      tags:
        - Driver
      parameters:
        - in: path
          name: driver_id
          description: Driver ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: the ID of the driven route
          schema:
            type: integer
            format: int32
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /driverstatus:
    get:
      summary: get all possible status entries for drivers
      description: get all possible status entries for drivers
      tags:
        - Driver
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Driverstati"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /vehicletype:
    get:
      summary: get all vehicle types
      description: get all possible vehicle types entries for drivers
      tags:
        - Driver
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Vehicletypes"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /address:
    post:
      summary: Adds a new customer address to the address database
      description: |
        Adds a new customer address to the address database. The new address can then be searched via /searchaddres
      tags:
        - Address
      parameters:
        - in: query
          name: q
          description: |
            Filter query string. Can be used to filter results. The format is the following:
            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>, 'val': <argument>}],'option':optionvalue} (for comparing with a String or numerical value)

            or

            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>,'field': <fieldname>}],'option':optionvalue} (for comparing with a value from another field).

            Possible operators for operatorname are:

            > ==, eq, equals, equals_to, !=, neq, does_not_equal, not_equal_to, >, gt, <, lt, >=, ge, gte, geq, <=, le, lte, leq, in, not_in, is_null, is_not_null, like, ilike, has, any.

            Possible options for optionvalue are:

            > limit, offset, order_by, group_by, single.

            Possible parameters for order_by are:

            > List of {'field': <fieldname>, 'direction': <directionname>} directionname is asc or desc
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Addresses'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /addressforlocation:
    get:
      summary: Gets a street address data for a given geo location.
      description: |
        Retrieves a street address for a given geo location via reverse geocoding.
      tags:
        - Address
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Address'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /searchaddress:
    get:
      summary: Get address to given query string
      description: |
        Address objects in the database can be searched by a (Whoosh-based) full text search on the fields company, contactlastname and contactfirstname.

        Please note: Search works only on database objects which are indexed by Whoosh; i.e., elements which are already in the database before the whoosh index is initially created will be ignored in the search procedure.
      tags:
        - Address
      parameters:
        - in: query
          name: query
          description: |
            "The query language which can be used as querystring is quite powerful. Its capabilities and syntax can be found here:

            https: //pythonhosted.org/Whoosh/querylang.html

            Quotes may ONLY be used if the exact string is being searched. 'Lieferquelle%20OR%20Stadtb%C3%BCcherei' (result nothing) is different from Lieferquelle%20OR%20Stadtb%C3%BCcherei (result Lieferquelle, Stadtbücherei)

            Please note: search works only on database objects which are indexed by Whoosh; i.e., elements which are already in the database before the whoosh index is initially created will be ignored in the search procedure."
          required: true
          type: string
        - in: query
          name: limit
          description: An Integer number definining the maximum number of search results to be shown.
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Address'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /delivery:
    get:
      summary: Get data for all deliveries in the database
      description: |
        Get all deliveries with all data available.
      tags:
        - Delivery
      parameters:
        - in: query
          name: q
          description: |
            Filter query string. Can be used to filter results. The format is the following:
            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>, 'val': <argument>}],'option':optionvalue} (for comparing with a String or numerical value)

            or

            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>,'field': <fieldname>}],'option':optionvalue} (for comparing with a value from another field).

            Possible operators for operatorname are:

            > ==, eq, equals, equals_to, !=, neq, does_not_equal, not_equal_to, >, gt, <, lt, >=, ge, gte, geq, <=, le, lte, leq, in, not_in, is_null, is_not_null, like, ilike, has, any.

            Possible options for optionvalue are:

            > limit, offset, order_by, group_by, single.

            Possible parameters for order_by are:

            > List of {'field': <fieldname>, 'direction': <directionname>} directionname is asc or desc
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Deliveries'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a new delivery
      description: |
        Add a new delivery consisting of to addresses.
      tags:
        - Delivery
      parameters:
        - in: body
          name: q
          description: Delivery object
          required: false
          schema:
            $ref: '#/definitions/Delivery'
      responses:
        201:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Edit delivery information
      description: |
        Edit any field of the delivery
      tags:
        - Delivery
      parameters:
        - in: body
          name: q
          description: Delivery object
          required: false
          schema:
            $ref: '#/definitions/Delivery'
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /delivery/{delivery_id}:
    get:
      summary: Get data for one delivery in the database
      description: get data for a delivery object
      tags:
        - Delivery
      parameters:
        - in: path
          name: delivery_id
          description: Delivery ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Delivery'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /deliverystatus:
    get:
      summary: get all possible stati for deliveries
      description: get all possible status entries for deliveries
      tags:
        - Delivery
      responses:
        200:
          description: A list of delivery status objects
          schema:
            $ref: '#/definitions/Deliverystati'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /orderup/{delivery_id}:
    get:
      summary: "Increases the order index of this delivery by one"
      description: "Allows manual re-ordering of deliveries by increasing the order index of this delivery by one (it will be handeled later). The delivery which had the order index plus one before will switch the order index with this one"
      tags:
        - Delivery
      parameters:
        - in: path
          name: delivery_id
          description: Delivery ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /orderdown/{delivery_id}:
    get:
      summary: "Decreases the order index of this delivery by one"
      description: "Allows manual re-ordering of deliveries by decreasing the order index of this delivery by one (it will be handeled earlier). The delivery which had the order index minus one before will switch the order index with this one"
      tags:
        - Delivery
      parameters:
        - in: path
          name: delivery_id
          description: Delivery ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /deliverydone/{delivery_id}:
    post:
      summary: Finish a delivery.
      description: This call sets automatically values of this finished delivery for status ('delivered' or 'undelivered'), actual delivery time and drivernotes.
      tags:
        - Delivery
      parameters:
        - in: path
          name: delivery_id
          description: Delivery ID to finish.
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: status and notes for the finished delivery.
          required: false
          schema:
            type: object
            properties:
              drivernotes:
                description: "additial notes from the driver, e.g. reasons for undeliverable item"
                type: string
              status:
                description: "status is 'delivered' (Default if not set) or 'undelivered' (indicating a failed delivery for re-planning)"
                type: string
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /deliverybeeline/{delivery_id}:
    get:
      summary: Gets the direct distance between a delivery location and its starting point.
      description: Calculates the direct / beeline distance between a delivery and its starting point (e.g. depot)
      tags:
        - Delivery
      parameters:
        - in: path
          name: delivery_id
          description: Delivery ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Linestring'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /canceldelivery/{delivery_id}:
    post:
      summary: "Cancels an unfinished delivery"
      description: "Cancels an unfinished (not yet delivered) delivery because of an unplanned event (e.g. customer cancels order). The delivery will be moved to the delivery archive and is not available anymore for routing"
      tags:
        - Delivery
      parameters:
        - in: path
          name: delivery_id
          description: Delivery ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /livedelivery/{signed_delivery_id}:
    post:
      summary: live tracking of a delivery
      description: "Returns tracking information for one delivery. Tracking consists of the current position of the driver and an estimated time of arrival at the deliveries destination. This endpoint is not secured by an authorization token but it must be supplied a cryptographically signed key containing the delivery id as path parameter. This signed id is generated for all deliveries on a route when setting the route status to 'ontheway' (PATCH /route {status : 3}. By setting this route status, an email will be sent automatically to all delivery recipients for which an email address was supplied in their address. This emails each contains a link to a tracking page handling the signed delivery ID for tracking their delivery. "
      tags:
        - Delivery
      parameters:
        - in: path
          name: signed_delivery_id
          description: Cryptographically signed delivery ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Livedelivery'
        403:
          description: "A failure message caused by missing authorization (403 forbidden)"
          schema:
            type: string
        409:
          description: "A conflict with current data in the database has been deltected (e.g. delivery does not exist or is not assignet to a route)"
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /route:
    get:
      summary: Get data of all routes.
      description: |
        Returns all data for planned routes from the system.
      tags:
        - Route
      parameters:
        - in: query
          name: q
          description: |
            Filter query string. Can be used to filter results. The format is the following:
            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>, 'val': <argument>}],'option':optionvalue} (for comparing with a String or numerical value)

            or

            > q={'filters':[{'name': <fieldname>, 'op': <operatorname>,'field': <fieldname>}],'option':optionvalue} (for comparing with a value from another field).

            Possible operators for operatorname are:

            > ==, eq, equals, equals_to, !=, neq, does_not_equal, not_equal_to, >, gt, <, lt, >=, ge, gte, geq, <=, le, lte, leq, in, not_in, is_null, is_not_null, like, ilike, has, any.

            Possible options for optionvalue are:

            > limit, offset, order_by, group_by, single.

            Possible parameters for order_by are:

            > List of {'field': <fieldname>, 'direction': <directionname>} directionname is asc or desc
          type: string
      responses:
        200:
          description: List of route objects
          schema:
            $ref: "#/definitions/Routes"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /route/{route_id}:
    get:
      summary: Get data for a single route.
      description: |
        Returns all data for one planned route from the system.
      tags:
        - Route
      parameters:
        - in: path
          name: route_id
          description: Route ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Detailed route data
          schema:
            $ref: "#/definitions/Route"
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /routemetadata:
    get:
      summary: Get data of all routes with reduced information and without route geometry
      description: |
        Returns a reduced set of data (without geometry) for planned routes from the system.
        This call retrieves route objects with all fields except the following: routebase (only routebase adress id), delivery details (only delivery ids), routestring
        Notice: this call can only retrieve either all routes in the database or exactly one route with a given ID. No detailled queries are possible at the moment.
      tags:
        - Route
      parameters:
        - in: query
          name: q
          description: Filter parameters
          required: false
          type: string
      responses:
        200:
          description: List of routes with minimal information
          schema:
            $ref: '#/definitions/Routemetadatas'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /routemetadata/{route_id}:
    get:
      summary: Get data of one route with reduced information and without route geometry
      description: |
        Returns a reduced set of data (without geometry) for one planned route from the system.
        This call retrieves route objects with all fields except the following: routebase (only routebase adress id), delivery details (only delivery ids), routestring
        Notice: this call can only retrieve either all routes in the database or exactly one route with a given ID. No detailled queries are possible at the moment.
      tags:
        - Route
      parameters:
        - in: path
          name: route_id
          description: Route ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Minimal information for one single route
          schema:
            $ref: '#/definitions/Routemetadata'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /routedeliverydistances/{route_id}:
    get:
      summary: Get all distances between subsequent deliveries on this route
      description: "Returns an object containing information for all deliveries on this route including the distance from a delivery to its respective predecessor"
      tags:
        - Route
      parameters:
        - in: path
          name: route_id
          description: Route ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Distances and information between deliveries of one route
          schema:
            $ref: '#/definitions/Routedeliverydistances'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /updateetas/{route_id}:
    get:
      summary: "Calculates the estimated time of arrival for all active deliveries on one route"
      description: |
        "This is an API call for calculating all estimated arrival times for all deliveries on a given route (which must be in the status 'ontheway'). The values are stored as 'eta' in the delivery tables of the database an can be retrieved via GET /delivery for each delivery.
        Calculation is done between the current position of a driver on the delivery's route and all deliveries each which must not be unassigned, (already) delivered or cancelled.
        The relevant route and the referring driver are automatically derived from the given route.
        All already delivered or cancelled assignments must have set a correct status. Otherwise they will be falsely considered in this calculation."
      tags:
        - Route
      parameters:
        - in: path
          name: route_id
          description: Route ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /updateetas:
    get:
      summary: "Calculates the estimated time of arrival for all active deliveries on all routes"
      description: |
        "This is an API call for calculating all estimated arrival times for all deliveries on all routes which are in the status 'ontheway'. The values are stored as 'eta' in the delivery tables of the database an can be retrieved via GET /delivery for each delivery.
        Calculation is done between the current position of a driver on each delivery's route and all deliveries each which must not be unassigned, (already) delivered or cancelled.
        The relevant route and the referring driver are automatically derived from the given route.
        All already delivered or cancelled assignments must have set a correct status. Otherwise they will be falsely considered in this calculation."
      tags:
        - Route
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /routestatus:
    get:
      summary: get all possible stati for routes
      description: get all possible status entries for routes
      tags:
        - Route
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Routestati'
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /cancelroute/{route_id}:
    post:
      summary: Cancels an unfinished route
      description: "Cancels an unfinished route route because of an unplanned event (e.g. driver is no more available). The route will be moved to the route archive and all unfinished (not yet delivered an not yet cancelled) deliveries will be retuned to the active deliveries list (delivery status is set to 'none'. These deliveries are then available for re-routing in a new tour"
      tags:
        - Route
      parameters:
        - in: path
          name: route_id
          description: Route ID
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /calcroute/single:
    post:
      summary: "Calculates one single route, ungrouped. One delivery after another."
      description: |
        "Calculates one continouus route for all deliveries without taking care of multiple stops at one location. Follows the simple scheme: starting point of first delivery → destination point of first delivery → starting point of second delivery → destination point of the second delivery → and so on..."
      tags:
      - Route
      parameters:
        - in: body
          name: body
          description: Delivery IDs
          required: true
          schema:
            type: object
            properties:
              deliveryids:
                type: array
                items:
                  type: integer
                  format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /calcroute/single/grouped/startpoint:
    post:
      summary: "Calculates one single route, grouped by common starting points."
      description: |
        "Calculates one continouus route for all deliveries.
        Checks first if multiple deliveries have the same starting location each. The calculated route covers the starting point of each group of delivereies before all of the referring delivery destinations."
      tags:
      - Route
      parameters:
        - in: body
          name: body
          description: Delivery IDs
          required: true
          schema:
            type: object
            properties:
              deliveryids:
                type: array
                items:
                  type: integer
                  format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /calcroute/multi/grouped/startpoint:
    post:
      summary: "Calculates multiple routes: One route per starting point"
      description: |
        "Groups all given delivieries by their supplier location and calculates one route per supplier location containing all assigned deliveries.
        The order of deliveries in each route is taken from the database field orderindex for every delivery."
      tags:
        - Route
      parameters:
        - in: body
          name: body
          description: Delivery IDs
          required: true
          schema:
            type: object
            properties:
              deliveryids:
                type: array
                items:
                  type: integer
                  format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /calcroute/optimized:
    post:
      summary: "Calculates one driving time optimized route for deliveries with a common starting point."
      description: |
        "Calculates one continouus route for all given deliveries by ordering the deliveries in shortest overall route time order (travelling salesaman routing). This works only if all deliveries have the same startingpoint (delivery.supplierlocation_id)"
      tags:
      - Route
      parameters:
        - in: body
          name: body
          description: Delivery IDs
          required: true
          schema:
            type: object
            properties:
              deliveryids:
                type: array
                items:
                  type: integer
                  format: int32
      responses:
        200:
          description: OK
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /calcroute/timeorder:
    post:
        summary: "Calculates one route for deliveries with a common starting point, ordered by planned delivery time"
        description: |
          "Calculates one continouus route for all given deliveries by ordering the deliveries in the order of their planned delivery time (delivery.pdt_to). The earliest location to be served will come first, the latest possible delivery will come last."
        tags:
        - Route
        parameters:
          - in: body
            name: body
            description: Delivery IDs
            required: true
            schema:
              type: object
              properties:
                deliveryids:
                  type: array
                  items:
                    type: integer
                    format: int32
        responses:
          200:
            description: OK
          403:
            description: A failure message caused by missing authorization (403 forbidden)
            schema:
              type: string
          422:
            description: >-
              A failure message caused by unprocessable input (e.g. no data found
              for input parameters)
            schema:
              type: string
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

  /calcroute/update/{route_id}:
    patch:
      summary: Add a new delivery to an existing route
      description: |
        "Calculates a new route based on existing unfinished (not yet delivered or cancelled) deliveries of route with given ID. Additionally, it consumes a list of new deliveries as body parameter and calculates a route containing "old" and "new" deliveries combined.
        It also sets the status of the "old" route to 14 ("route_replaced") and sets the field "replaced_by" to the ID of the new calculated route."
      tags:
        - Route
      parameters:
        - in: path
          name: route_id
          description: Route ID
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: Delivery IDs to be added to existing route.
          schema:
            type: object
            properties:
              deliveryids:
                type: array
                items:
                  type: integer
                  format: int32
      responses:
        200:
          description: OK. Returns a PostGIS Geometry Object for the new route which is stored as route object in the database with two additional calculated fields for these routes duration and distance.
        403:
          description: A failure message caused by missing authorization (403 forbidden)
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /taskhistogram:
      get:
        summary: Retrieves aggregated task data for billing.
        description: |
          Retrieves task entries aggregated by time intervals and task types with the following call. At the moment, the only task type considered is the creation of delivery objects, because only those are relevant for price calculation and API usage accounting.
        tags:
        - Accounting
        parameters:
        - in: query
          name: type
          description: "A string for the task type to group by (e.g. read or update). Default: all types (read, update, create, delete). At the moment, only create taks are collected in the database."
          required: false
          type: string
        - in: query
          name: entity
          description: "A string for the entity to group by (e.g. deliveries or routes). Default: all entities (see data model).At the moment, only delivery entities are collected in the database."
          required: false
          type: string
        - in: query
          name: intervallength
          description: length of one aggregation interval in minutes (Default 5 minutes)
          required: false
          type: integer
          format: int32
        - in: query
          name: startdate
          description: |
            Earliest start date of first interval. Format ISO 8601 (YYYY-MM-DDThh mm ss+tzh tzm) (Default 10 days back from now). timezone (+tzh tzm) is optional. Default ist local timezone
          required: false
          type: string
          format: dateTime
        - in: query
          name: enddate
          description: |
            latest end date of last interval. Format ISO 8601 (YYYY-MM-DDThh:mm:ss+tzh:tzm) (Default now). timezone ("+tzh:tzm") is optional. Default ist local timezone.
          required: false
          type: string
          format: dateTime
        - in: query
          name: withnull
          description: |
            When False (=Default) only intervals which contain any count value(s) from start date to end date will be returned by the API.
            When True all intervals from start date to end date will be returned. Count for intervals with no task is then always 0.
            Can be combined with all other parameters
          required: false
          type: boolean
        responses:
          200:
            description: Detailed information about tasks and usage history
            schema:
              $ref: '#/definitions/Taskhistograms'
          403:
            description: A failure message caused by missing authorization (403 forbidden)
            schema:
              type: string
          422:
            description: >-
              A failure message caused by unprocessable input (e.g. no data found
              for input parameters)
            schema:
              type: string
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
  /accounting:
      get:
        summary: Retrieve accounting information
        description: |
          Retrieve information about current costs, number of already used tasks, current accounting period etc.
        tags:
        - Accounting
        parameters:
          - in: query
            name: q
            description: |
              Filter query string. Can be used to filter results. The format is the following:
              > q={'filters':[{'name': <fieldname>, 'op': <operatorname>, 'val': <argument>}],'option':optionvalue} (for comparing with a String or numerical value)

              or

              > q={'filters':[{'name': <fieldname>, 'op': <operatorname>,'field': <fieldname>}],'option':optionvalue} (for comparing with a value from another field).

              Possible operators for operatorname are:

              > ==, eq, equals, equals_to, !=, neq, does_not_equal, not_equal_to, >, gt, <, lt, >=, ge, gte, geq, <=, le, lte, leq, in, not_in, is_null, is_not_null, like, ilike, has, any.

              Possible options for optionvalue are:

              > limit, offset, order_by, group_by, single.

              Possible parameters for order_by are:

              > List of {'field': <fieldname>, 'direction': <directionname>} directionname is asc or desc
            type: string
        responses:
          200:
            description: Accouting information
            schema:
              $ref: '#/definitions/Accountings'
          403:
            description: A failure message caused by missing authorization (403 forbidden)
            schema:
              type: string
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
  /resetpwd:
    post:
      summary: Triggers sending an email to the user with link to reset password
      description: |
        This endpoint triggers sending an email with a link to reset the user password.
      tags:
      - Authorization
      parameters:
        - in: body
          name: email
          description: email address of the user to reset the password.
          required: true
          schema:
            type: object
            properties:
              email:
                description: "the user's email address the password reset link will be sent to. Must be the address of an existing user in the database"
                type: string
      responses:
        200:
          description: Ok
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /resetpwd/{verification_code}:
    post:
      summary: Resets the users password to a new one
      description: |
        This endpoint uses a verification code which was generated while sending an email to the user in the /resetpwd call
      tags:
      - Authorization
      parameters:
        - in: path
          name: verification_code
          description: The verification code which was sent to the user
          required: true
          type: string
        - in: body
          name: password
          description: The new password of the user.
          required: true
          schema:
            type: object
            properties:
              password:
                description: "The new password which should be set for the user"
                type: string
      responses:
        200:
          description: Ok
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /signup/dispatcher:
    post:
      summary: Creates / updates a new dispatcher user in the system
      description: |
        "Creates / updates a new dispatcher user in the system. There must already be a user predefined with this email address in the system. The first user initialization is done on request by Smartlane, e.g. via http://www.dispatch.smartlane.de/#!registerform/sgp4i"
      tags:
      - Authorization
      parameters:
        - in: body
          name: userdata
          description: user data of the new dispatcher
          required: true
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        200:
          description: Ok
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /activatedriver:
    post:
      summary: Activates a driver from a driver's device
      description: |
        "Activates a driver from a driver's device after he/she has received an activation code which was generated upon driver object creation by a dispatcher. Please note that there can be a delay of up to a couple of hours between driver creation in the dispatcher application and the SMS being sent to the driver because of internal user validations"
      tags:
      - Authorization
      parameters:
        - in: body
          name: driver activation data
          description: activation code and device number (IMEI) of the drivers device.
          required: true
          schema:
            type: object
            properties:
              code:
                description: "The activation code which was sent to the driver via SMS after a dispatcher has added him/her to the application."
                type: string
              imei:
                description: "The IMEI (device number. http://www.imei.info/) of the driver's device. A driver can later always automatically login if the devices IMEI is read by the login application. This is e.g. always done by the SmartlaneDISPATCH! driver smartphone app."
                type: string

      responses:
        200:
          description: Ok
        403:
          description: A failure message caused by missing authorization if the activation code is invalid or expired
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /driverauth:
    post:
      summary: Driver login to retreive a valid authorization token.
      description: |
        "Retrieves a fresh JWT authorization token for the driver user with a given IMEI (device number)"
      tags:
      - Authorization
      parameters:
        - in: body
          name: driver login data
          description: device number (IMEI) of the drivers device.
          required: true
          schema:
            type: object
            properties:
              IMEI:
                description: "The IMEI (device number. http://www.imei.info/) of the driver's device. A driver can automatically be logged in if the devices IMEI is read by the login application. This is e.g. always done by the SmartlaneDISPATCH! driver smartphone app."
                type: string

      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              token:
                description: "The JWT token of the drive which can be used for maing calls on the SmartlaneDISPATCH! API."
                type: string
              driver_id:
                description: "The id of the driver which is logged in."
                type: integer
                format: int32
        403:
          description: A failure message caused by missing authorization if the IMEI is invalid or the user account has expired
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /tokenexpiry:
    post:
      summary: Gets the expiry time of a current users token
      description: |
        Gets the expiry time of a current users token. It is automatically read out of the Auuthorization header.
      tags:
      - Authorization
      responses:
        200:
          description: the token expiry time as ISO time format string
          schema:
            type: string
            format: dateTime
        401:
          description: A failure message caused by missing authentication
          schema:
            type: string
        422:
          description: >-
            A failure message caused by unprocessable input (e.g. no data found
            for input parameters)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Companies:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Company'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Company:
    type: object
    properties:
      id:
        type: integer
      companyname:
        type: string
      location_id:
        description: reference to Address
        type: integer
        format: int32
      pricing_package:
        type: integer
        format: int32
  NewUser:
    type: object
    required:
      - activationcode
      - email
      - firstname
      - lastname
      - password
      - companyname
    properties:
      activationcode:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
      companyname:
        type: string
      companycity:
        type: string
      companystreet:
        type: string
      companyhousenumber:
        type: string
      companypostalcode:
        type: string
      companycountry:
        type: string
      companyboundingbox:
        type: string
  Dispatchers:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Dispatcher'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Dispatcher:
    type: object
    properties:
      id:
        type: integer
        format: int32
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      company_id:
        description: reference to Company
        type: integer
        format: int32
      expires:
        type: string
        format: date-time
      active:
        type: boolean
      confirmed_at:
        type: string
        format: date-time
      usertype:
        type: string
  Drivers:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Driver'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Driver:
    type: object
    properties:
      id:
        type: integer
        format: int32
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      company_id:
        description: reference to Company
        type: integer
        format: int32
      expires:
        type: string
        format: date-time
      active:
        type: boolean
      confirmed_at:
        type: string
        format: date-time
      usertype:
        type: string
      vehicle:
        description: referce to Vehicletype
        type: integer
        format: int32
      mobile_nr:
        type: string
      htmlcolor:
        type: string
        maxLength: 6
  Drivertrackings:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Drivertracking'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Drivertracking:
    type: object
    properties:
      id:
        type: integer
        format: int32
      timestamp:
        type: string
        format: date-time
      position:
        $ref: "#/definitions/Location"
      driver_id:
        description: reference to Driver
        type: integer
        format: int32
  Driverpositions:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Driverposition'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Driverposition:
    type: object
    properties:
      id:
        type: integer
        format: int32
      timestamp:
        type: string
        format: date-time
      position:
        $ref: "#/definitions/Location"
      driver_id:
        description: reference to Driver
        type: integer
        format: int32
      firstname:
        type: string
      lastname:
        type: string
      htmlcolor:
        type: string
        maxLength: 6
  Driveravailabilities:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Driveravailability'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Driveravailability:
    type: object
    properties:
      id:
        type: integer
        format: int32
      fromtime:
        type: string
        format: date-time
      totime:
        type: string
        format: date-time
      driver_id:
        description: reference to Driver
        type: integer
        format: int32
  Vehicletypes:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Vehicletype'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Vehicletype:
    type: object
    properties:
      id:
        type: integer
        format: int32
      key:
        type: string
      vehicletypename:
        type: string
  Driverstati:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Driverstatus'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Driverstatus:
    type: object
    properties:
      id:
        type: integer
        format: int32
      key:
        type: string
      statusname:
        type: string

  Routestati:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Routestatus'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32

  Routestatus:
    type: object
    properties:
      id:
        type: integer
        format: int32
      key:
        type: string
      statusname:
        type: string

  Deliveries:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Drivertracking'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Delivery:
    type: object
    properties:
      id:
        type: integer
        format: int32
      deliveryissuename:
        type: string
      pdt_from:
        type: string
        format: date-time
      pdt_to:
        type: string
        format: date-time
      eta:
        type: string
        format: date-time
      ata:
        type: string
        format: date-time
      atd:
        type: string
        format: date-time
      els:
        type: string
        format: date-time
      creationtime:
        type: string
        format: date-time
      deliverprio:
        type: integer
        format: int32
      orderindex:
        type: integer
        format: int32
      notes:
        type: string
      drivernotes:
        type: string
      deliverylocation_id:
        description: reference to Address
        type: integer
        format: int32
      supplierlocation_id:
        description: reference to Address
        type: integer
        format: int32
      delivery_address:
        $ref: "#/definitions/Location"
      supplier_address:
        $ref: "#/definitions/Location"
      route_id:
        description: reference to Route
        type: integer
        format: int32
      status:
        description: reference to Deliverystatus
        type: integer
        format: int32
      distances:
        description: JSON object containing distances to other deliveries on the same route
        type: string

  Deliverystatus:
    type: object
    properties:
      id:
        type: integer
        format: int32
      key:
        type: string
      statusname:
        type: string
  Deliverystati:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Deliverystatus'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32

  Livedelivery:
    description: "Aaddress, eta and The current postion of the driver serving thid delivery. If no driver postion can be found, driverinfo is set to the message 'No driver tracking found on this route'"
    type: object
    properties:
      id:
        type: string
      address:
        $ref: "#/definitions/Address"
      eta:
        type: string
        format: date-time
      driverinfo:
        $ref: "#/definitions/Drivertracking"

  Location:
    type: object
    properties:
      coordinates:
       type: array
       items:
        type: integer
        format: int64
      type:
        type: string
  Linestring:
    type: object
    properties:
      coordinates:
       type: array
       items:
          $ref: '#/definitions/Location'
      type:
        type: string
  Addresses:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Address'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Address:
    type: object
    properties:
      id:
        type: integer
      city:
        type: string
      contactcompany:
        type: string
      contactfirstname:
        type: string
      contactlastname:
        type: string
      country:
        type: string
      email:
        type: string
      housenumber:
        type: string
      location:
        $ref: "#/definitions/Location"
      phonenr:
        type: string
      postalcode:
        type: string
      street:
        type: string
      companyname:
        type: string
  Routes:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Route'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Route:
    type: object
    properties:
      ast:
        type: string
        format: date-time
      creationtime:
        type: string
        format: date-time
      distance:
        type: integer
        format: int32
      driver_id:
        type: integer
        format: int32
      gross_duration:
        type: integer
        format: int32
      id:
        type: integer
        format: int32
      net_duration:
        type: integer
        format: int32
      previous_deliveries:
        type: array
        items:
          $ref: "#/definitions/Delivery"
      previous_drivers:
        type: array
        items:
          $ref: "#/definitions/Driver"
      pst:
        type: integer
        format: int32
      replaces:
        type: integer
        format: int32
      routebase_address:
        $ref: "#/definitions/Address"
      routebase_address_id:
        description: reference to Address
        type: integer
        format: int32
      routestring:
        $ref: "#/definitions/Location"
      sorted_deliveries:
        type: array
        items:
          $ref: "#/definitions/Delivery"
      status:
        type: integer
        format: int32
      deliveries:
        type: array
        items:
          $ref: "#/definitions/Delivery"
  Routemetadatas:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Routemetadata'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Routemetadata:
    type: object
    properties:
      id:
        type: integer
        format: int32
      ast:
        type: string
        format: date-time
      creationtime:
        type: string
        format: date-time
      deliveries:
        type: array
        items:
          type: integer
          format: int32
      distance:
        type: integer
        format: int32
      driver_id:
        description: reference to Driver
        type: integer
        format: int32
      gross_duration:
        type: integer
        format: int32
      htmlcolor:
        type: string
      net_duration:
        type: integer
        format: int32
      pst:
        type: string
        format: date-time
      routebase_address_id:
        description: reference to Address
        type: integer
        format: int32
      status:
        type: integer
        format: int32
  Routedeliverydistances:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Routedeliverydistance'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Routedeliverydistance:
    type: object
    properties:
      ata:
        type: string
        format: date-time
      city:
        type: string
      company:
        type: string
      contactfirstname:
        type: string
      contactlastname:
        type: string
      dist:
        type: number
        format: float
      eta:
        type: string
        format: date-time
      housenumber:
        type: string
      id:
        type: integer
        format: int32
      postalcode:
        type: string
      status:
        type: integer
        format: int32
      street:
        type: string
  Accountings:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Accounting'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Accounting:
    type: object
    properties:
      basic_charge:
        type: integer
        format: int32
      company_id:
        type: integer
        format: int32
      cost_per_unit:
        type: number
        format: float
      id:
        type: integer
        format: int32
      periodend:
        type: string
        format: date-time
      periodstart:
        type: string
        format: date-time
      units:
        type: integer
        format: int32
  Taskhistograms:
    type: object
    properties:
      num_results:
        type: integer
        format: int32
      objects:
        type: array
        items:
          $ref: '#/definitions/Taskhistogram'
      page:
        type: integer
        format: int32
      total_pages:
        type: integer
        format: int32
  Taskhistogram:
    type: object
    properties:
      count:
        type: string
      entity:
        type: string
      intervalend:
        type: string
        format: date-time
      intervalstart:
        type: string
        format: date-time
      tasktype:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
